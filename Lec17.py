# Use of NumPy
# Python List vs Numpy
L = range(20, 31,2)
print(L)

#L = range(20, 31,2.5) # Error increment has to be integer
#print(L)

import math
L = range(20, 31,2)
#print(math.sin(L)) # sin is a scalar function & cannot be applied to this list

import numpy as np
NL = np.arange(20,31,2)
print(NL)

print(np.sin(NL))

print(np.arange(20,31,1.75))

print(np.linspace(20,30,11))

print(np.linspace(20,30,31))

print(np.linspace(20,30,51))

# Exploring standard mathematical function in Numpy
import random

random.randint(-10,10)

[random.randint(-10,10) for i in range(20)]

x = np.array([random.randint(-10,10) for i in range(20)])
print(x)

print(np.mean(x))

print(np.exp(x))
print(np.max(x))
print(np.argmax(x)) # index of maximum of the list
print(np.min(x))
print(np.argmin(x)) # index of maximum of the list

print(x[8])
print(x[-1]) # last entry in the list
print(x[3:7])

print(np.sin(2))
print(np.exp(-2))
print(np.e)
print(np.pi)
print(np.euler_gamma)
print(np.sqrt(np.linspace(5,10,11)))

def f(t):
	return (np.exp(-t)+np.sin(t**2))

print(f(x))


Output:

range(20, 31, 2)
[20 22 24 26 28 30]
[ 0.91294525 -0.00885131 -0.90557836  0.76255845  0.27090579 -0.98803162]
[20.   21.75 23.5  25.25 27.   28.75 30.5 ]
[20. 21. 22. 23. 24. 25. 26. 27. 28. 29. 30.]
[20.         20.33333333 20.66666667 21.         21.33333333 21.66666667
 22.         22.33333333 22.66666667 23.         23.33333333 23.66666667
 24.         24.33333333 24.66666667 25.         25.33333333 25.66666667
 26.         26.33333333 26.66666667 27.         27.33333333 27.66666667
 28.         28.33333333 28.66666667 29.         29.33333333 29.66666667
 30.        ]
[20.  20.2 20.4 20.6 20.8 21.  21.2 21.4 21.6 21.8 22.  22.2 22.4 22.6
 22.8 23.  23.2 23.4 23.6 23.8 24.  24.2 24.4 24.6 24.8 25.  25.2 25.4
 25.6 25.8 26.  26.2 26.4 26.6 26.8 27.  27.2 27.4 27.6 27.8 28.  28.2
 28.4 28.6 28.8 29.  29.2 29.4 29.6 29.8 30. ]
[ -7   9   4  10   8  10  -4   8  -3   8   6  -3  -1  -6   1   4   4 -10
  -1  -4]
1.65
[9.11881966e-04 8.10308393e+03 5.45981500e+01 2.20264658e+04
 2.98095799e+03 2.20264658e+04 1.83156389e-02 2.98095799e+03
 4.97870684e-02 2.98095799e+03 4.03428793e+02 4.97870684e-02
 3.67879441e-01 2.47875218e-03 2.71828183e+00 5.45981500e+01
 5.45981500e+01 4.53999298e-05 3.67879441e-01 1.83156389e-02]
10
3
-10
17
-3
-4
[10  8 10 -4]
0.9092974268256817
0.1353352832366127
2.718281828459045
3.141592653589793
0.5772156649015329
[2.23606798 2.34520788 2.44948974 2.54950976 2.64575131 2.73861279
 2.82842712 2.91547595 3.         3.082207   3.16227766]
[ 1.09567941e+03 -6.29764584e-01 -2.69587678e-01 -5.06320241e-01
  9.20361501e-01 -5.06320241e-01  5.43102467e+01  9.20361501e-01
  2.04976554e+01  9.20361501e-01 -9.89300101e-01  2.04976554e+01
  3.55975281e+00  4.02437015e+02  1.20935043e+00 -2.69587678e-01
 -2.69587678e-01  2.20259594e+04  3.55975281e+00  5.43102467e+01]
